import { WorkletEvents } from '@lynx-js/react/worklet-runtime/bindings';
import { isRendering } from '../../lifecycle/isRendering.js';
import { __globalSnapshotPatch } from '../../lifecycle/patch/snapshotPatch.js';
import { onPostWorkletCtx } from '../ctx.js';
import { delayedRunOnMainThreadData } from './delayedRunOnMainThreadData.js';
import { isMtsEnabled } from '../functionality.js';
import { onFunctionCall } from './functionCall.js';
/**
 * `runOnMainThread` allows triggering main thread functions on the main thread asynchronously.
 * @param fn - The main thread functions to be called.
 * @returns A function. Calling which with the arguments to be passed to the main thread function to trigger it on the main thread. This function returns a promise that resolves to the return value of the main thread function.
 * @example
 * ```ts
 * import { runOnMainThread } from '@lynx-js/react';
 *
 * async function someFunction() {
 *   const fn = runOnMainThread(() => {
 *     'main thread';
 *     return 'hello';
 *   });
 *   const result = await fn();
 * }
 * ```
 * @public
 */
export function runOnMainThread(fn) {
    if (__LEPUS__) {
        throw new Error('runOnMainThread can only be used on the background thread.');
    }
    if (!isMtsEnabled()) {
        throw new Error('runOnMainThread requires Lynx sdk version 2.14.');
    }
    return async (...params) => {
        return new Promise((resolve) => {
            onPostWorkletCtx(fn);
            const resolveId = onFunctionCall(resolve);
            const data = {
                worklet: fn,
                params,
                resolveId,
            };
            if (__globalSnapshotPatch === undefined || isRendering.value) {
                // before hydration or is rendering
                delayedRunOnMainThreadData.push(data);
                return;
            }
            lynx.getCoreContext().dispatchEvent({
                type: WorkletEvents.runWorkletCtx,
                data: JSON.stringify(data),
            });
        });
    };
}
//# sourceMappingURL=runOnMainThread.js.map